// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.22.0
// source: player_permission.sql

package queries

import (
	"context"
)

const createPlayerPermissions = `-- name: CreatePlayerPermissions :copyfrom
INSERT INTO player_permissions (pid, permission) VALUES (?, ?)
`

type CreatePlayerPermissionsParams struct {
	Pid        int64
	Permission string
}

const listPlayerPermissions = `-- name: ListPlayerPermissions :many
SELECT permission, pid, id FROM player_permissions WHERE pid = ?
`

func (q *Queries) ListPlayerPermissions(ctx context.Context, pid int64) ([]PlayerPermission, error) {
	rows, err := q.query(ctx, q.listPlayerPermissionsStmt, listPlayerPermissions, pid)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []PlayerPermission
	for rows.Next() {
		var i PlayerPermission
		if err := rows.Scan(&i.Permission, &i.Pid, &i.ID); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
