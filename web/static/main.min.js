function getRegisterData(){return{username:"",password:"",confirmPassword:"",notifs:{u:!1,pw:!1,cpw:!1},eval:{pw:{strengths:{len:!1,mixedCase:!1,num:!1,specialChar:!1}},u:{len:!1},cpw:{eq:!1}},strengths:{len:!1,mixedCase:!1,num:!1,specialChar:!1},errors:{conflict:!1,internal:!1,disaster:!1},submitRegisterData,sanitizeUsername,isUsernameValid,isPasswordValid,setStrengths,setEvalStrengths}}async function submitRegisterData(errors,u,pw,confirmpw){if(!isUsernameValid(u))return;if(!isPasswordValid(pw))return;if(pw!==confirmpw)return;const su=sanitizeUsername(u),body=new FormData;body.append("username",su),body.append("password",pw);try{const response=await fetch("/player/new",{method:"POST",body});if(response.status!==201){if(response.status===409){errors.conflict=!0;return}errors.internal=!0;return}window.location.reload()}catch(err){errors.disaster=!0;return}}function sanitizeUsername(u){return u.replace(/[^a-zA-Z0-9_-]+/gi,"").toLowerCase()}function isUsernameValid(u){if(u.length<4)return!1;if(u.length>8)return!1;if(new RegExp("[^a-z0-9_-]+","g").test(u))return!1;return!0}function isPasswordValid(pw){if(pw.length<8)return!1;if(pw.length>255)return!1;return!0}function setStrengths(strengths,pw){if(strengths.len=!1,pw.length>8)strengths.len=!0;if(strengths.mixedCase=!1,pw.match(/[a-z]/)&&pw.match(/[A-Z]/))strengths.mixedCase=!0;if(strengths.num=!1,pw.match(/[0-9]/))strengths.num=!0;if(strengths.specialChar=!1,pw.match(/[^a-zA-Z\d]/))strengths.specialChar=!0}function setEvalStrengths(evalStrengths,strengths){evalStrengths.len=strengths.len||evalStrengths.len,evalStrengths.mixedCase=strengths.mixedCase||evalStrengths.mixedCase,evalStrengths.num=strengths.num||evalStrengths.num,evalStrengths.specialChar=strengths.specialChar||evalStrengths.specialChar}function getLoginData(){return{username:"",password:"",errors:{auth:!1,disaster:!1},submitLoginData,sanitizeUsername}}async function submitLoginData(errors,u,pw){try{const body=new FormData;if(body.append("username",u),body.append("password",pw),(await fetch("/login",{method:"POST",body})).status!=200){errors.auth=!0;return}window.location.reload()}catch{errors.disaster=!0}}function getLogoutData(){return{logout}}async function logout(){try{if((await fetch("/logout",{method:"POST"})).status!==200)return;window.location.reload()}catch{}}window.getRegisterData=getRegisterData;window.getLoginData=getLoginData;window.getLogoutData=getLogoutData;export{submitRegisterData,submitLoginData,setStrengths,setEvalStrengths,sanitizeUsername,logout,isUsernameValid,isPasswordValid,getRegisterData,getLogoutData,getLoginData};
