name: Test, Build and Deploy 
on: [push]
jobs:
  test:
    name: Integration Tests
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_DATABASE: test
          MYSQL_ROOT_PASSWORD: pass
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-start-period 10s
          --health-timeout 5s
          --health-retries 10
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21.x
      - name: Setup Atlas
        uses: ariga/setup-atlas@v0
      - name: Setup migrations
        run: make fetch_migrations
      - name: Setup Test Database
        run: make setup_test_db
      - name: Run Tests
        run: |
          go test ./...
        env:
          DATABASE_URL: root:pass@/test
  build-image:
    name: Build and Push Image
    runs-on: ubuntu-latest
    needs: test
    env:
      IMAGE_NAME: app
      REGISTRY: registry.digitalocean.com/petrichor
    steps:
      - name: Checkout
        uses: actions/checkout@v4 
      - name: Build Image
        run: docker build -t $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7) .
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600
      - name: Remove all old images
        run: |
          if [ ! -z "$(doctl registry repository list | grep "$(echo $IMAGE_NAME)")" ]; then doctl registry repository delete-manifest $(echo $IMAGE_NAME) $(doctl registry repository list-tags $(echo $IMAGE_NAME) | grep -o "sha.*") --force; else echo "No repository"; fi
      - name: Push image to DigitalOcean Container Registry
        run: docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)
  deploy:
    name: Deploy to Droplet
    runs-on: ubuntu-latest
    needs: build-image
    steps:
      - name: Deploy to Digital Ocean droplet via SSH action
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          envs: IMAGE_NAME,REGISTRY,{{ secrets.DIGITALOCEAN_ACCESS_TOKEN }},GITHUB_SHA
          script: |
            docker login -u ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} -p ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} registry.digitalocean.com
            docker stop app
            docker rm app
            docker image pull registry.digitalocean.com/petrichor/app:$(echo $GITHUB_SHA | head -c7)
            docker run -p 8080:8080 --name app -e DATABASE_URL="${{ secrets.DATABASE_URL }}" registry.digitalocean.com/petrichor/app:$(echo $GITHUB_SHA | head -c7)
